name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'

jobs:
  deploy-vercel:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run database migrations
        run: npm run db:push
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
      
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./
      
      - name: Notify deployment
        if: success()
        run: |
          echo "âœ… Deployment successful!"
          echo "URL: https://kenmei.com"

  deploy-worker:
    name: Deploy Worker to Fly.io
    runs-on: ubuntu-latest
    needs: deploy-vercel
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Fly CLI
        uses: superfly/flyctl-actions/setup-flyctl@master
      
      - name: Deploy worker
        run: flyctl deploy --config infra/fly/fly.worker.toml --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      
      - name: Verify worker health
        run: |
          sleep 10
          curl -f https://kenmei-worker.fly.dev/api/worker/status || exit 1

  deploy-typesense:
    name: Deploy Typesense to Fly.io
    runs-on: ubuntu-latest
    needs: deploy-vercel
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Fly CLI
        uses: superfly/flyctl-actions/setup-flyctl@master
      
      - name: Deploy Typesense
        run: flyctl deploy --config infra/fly/fly.typesense.toml --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      
      - name: Verify Typesense health
        run: |
          sleep 15
          curl -f https://kenmei-typesense.fly.dev:8108/health || exit 1
      
      - name: Reindex search data
        run: |
          curl -X POST https://kenmei.com/api/search/reindex \
            -H "Authorization: Bearer ${{ secrets.WORKER_SECRET }}"

  smoke-test:
    name: Production Smoke Tests
    runs-on: ubuntu-latest
    needs: [deploy-vercel, deploy-worker, deploy-typesense]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Install Playwright
        run: |
          npm ci
          npx playwright install --with-deps chromium
      
      - name: Run smoke tests
        run: npm run test:smoke
        env:
          BASE_URL: https://kenmei.com
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-test-results
          path: test-results/
          retention-days: 7

  post-deploy:
    name: Post-Deployment Tasks
    runs-on: ubuntu-latest
    needs: smoke-test
    steps:
      - name: Seed database with MangaDex data
        run: |
          curl -X POST https://kenmei.com/api/dev/seed \
            -H "Authorization: Bearer ${{ secrets.WORKER_SECRET }}"
      
      - name: Clear CDN cache
        run: |
          curl -X POST "https://api.vercel.com/v1/purge?slug=kenmei" \
            -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}"
      
      - name: Notify success
        run: |
          echo "ðŸŽ‰ Deployment complete and verified!"
          echo "Frontend: https://kenmei.com"
          echo "Worker: https://kenmei-worker.fly.dev"
          echo "Search: https://kenmei-typesense.fly.dev"